<?xml version="1.0" encoding="UTF-8"?>
<!-- 
This is a Spring file that defines how Pentaho system objects are created and managed.  
An implementation of IPentahoObjectFactory, such as SpringWebPentahoObjectFactory, is 
responsible for serving objects to callers based on this file.

default-lazy-init is set to true since some of these object make calls into 
PentahoSystem which is initialized after Spring
 -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
  http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd" default-lazy-init="true">

  <bean id="ISolutionEngine" class="org.pentaho.platform.engine.services.solution.SolutionEngine" scope="prototype" />
  <bean id="IVersionHelper" class="org.pentaho.platform.util.VersionHelper" scope="singleton" />

  <bean id="ISolutionRepository" class="org.pentaho.platform.engine.services.MockSolutionRepository" scope="singleton" />
  <bean id="IPluginManager" class="org.pentaho.platform.engine.services.MockPluginManager" scope="singleton" />

  <bean id="IAuditEntry" class="org.pentaho.platform.engine.services.audit.AuditFileEntry" scope="singleton" />
  <bean id="systemSettingsService" class="org.pentaho.platform.engine.core.system.PathBasedSystemSettings" />
  
  <bean id="GoodObject" class="org.pentaho.platform.engine.core.GoodObject" scope="session" />
  <bean id="BadObject" class="org.pentaho.platform.engine.core.BadObject" scope="prototype" />
  <bean id="BadObjectRuntime" class="org.pentaho.platform.engine.core.BadObjectRuntime" scope="prototype" />

  <bean id="IDBDatasourceService" class="org.pentaho.platform.engine.services.MockDataSourceService" scope="singleton">
  	<constructor-arg value="false" />
  </bean>

  <bean class="org.pentaho.platform.engine.core.MimeTypeListener" scope="singleton">
    <property name="name" value="Test 1"/>
    <pen:object-properties>
        <pen:prop key="priority" value="10"/>
    </pen:object-properties>
  </bean>

  <bean class="org.pentaho.platform.engine.core.MimeTypeListener" scope="singleton">
    <property name="name" value="Higher Priority MimeTypeListener"/>
    <pen:object-properties>
      <pen:prop key="priority" value="30"/>
      <pen:prop key="someKey" value="someValue"/>
    </pen:object-properties>
  </bean>

  <bean class="org.pentaho.platform.engine.core.MimeTypeListener" scope="singleton">
    <property name="name" value="Test Attr1"/>
    <pen:object-properties>
      <pen:prop key="someKey" value="1"/>
    </pen:object-properties>
  </bean>

  <bean class="org.pentaho.platform.engine.core.MimeTypeListener" scope="singleton">
    <property name="name" value="Test Attr2"/>
    <pen:object-properties>
      <pen:prop key="someKey" value="2"/>
    </pen:object-properties>
  </bean>

  <bean class="org.pentaho.platform.engine.core.MimeTypeListener" scope="singleton">
    <property name="name" value="Test Attr3"/>
    <pen:object-properties>
      <pen:prop key="someKey" value="3"/>
      <pen:prop key="foo" value="bar"/>
    </pen:object-properties>
  </bean>

  <!-- session scoped beans in a standalone context need properties too -->
  <bean id="sessionPropertyTest" class="org.pentaho.platform.engine.core.solution.ContentInfo" scope="session">
    <property name="title" value="Test Session"/>
  </bean>

</beans>